@using MvcPaging;
@model IPagedList<SchoolLibrary.BusinessModels.Models.ReaderHistoryBusinessModel>

@{
    ViewBag.Title = "ReaderHistory";

}

<p>

    @Html.ActionLink("Create New", "CreateReaderHistory", new { readerId = Model.First().ReaderBusiness.ReaderId })
</p>

@{
    if (Model != null)
    {
    <table class="table table-bordered">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.First().InventoryBusiness.Item.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().InventoryBusiness.Number)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().StartDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().ReturnDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.First().FinishDate)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.InventoryBusiness.Item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.InventoryBusiness.Number)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.StartDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ReturnDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FinishDate)
                </td>
                <td>

                    @Html.ActionLink("Edit History", "EditReaderHistory", new { readerId = item.Id })
                </td>
            </tr>
        }


    </table>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
        
    }
    else
    {
    <h2>Reader History is Empty</h2>
    }
    
}
<div class="pager1">
    @Html.Raw(Ajax.Pager(
            new Options
            {
                PageSize = Model.PageSize,
                TotalItemCount = Model.TotalItemCount,
                CurrentPage = Model.PageNumber,
                ItemTexts = new ItemTexts() { Next = "Next", Previous = "Previous", Page = "P" },
                ItemIcon = new ItemIcon() { First = "icon-backward", Previous = "icon-chevron-left", Next = "icon-chevron-right", Last = "icon-forward" },
                TooltipTitles = new TooltipTitles() { Next = "Next page", Previous = "Previous page", Page = "Page {0}." },
                Size = Size.normal,
                Alignment = Alignment.centered,
                IsShowControls = true,
                IsShowFirstLast = true,
                CssClass = ""
            },
            new AjaxOptions
            {
                UpdateTargetId = "grid-list",
                OnBegin = "beginPaging",
                OnSuccess = "successPaging",
                OnFailure = "failurePaging"
            }, new { controller = "Librarian", action = "ReaderHistory",readerId = ViewData["readerId"],inventoryNumber = ViewData["inventoryNumber"] }))
    <div class="well">
        Showing <span class="badge badge-success">@Model.ItemStart</span> to <span class="badge badge-success">@Model.ItemEnd</span>
        of <span class="badge badge-info">@Model.TotalItemCount</span> entries
    </div>
</div>



<script src="~/Scripts/bootstrap.min.js" type="text/javascript">


</script>





